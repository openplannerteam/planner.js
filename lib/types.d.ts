import TravelMode from "./enums/TravelMode";
import IConnectionsFetcher from "./fetcher/connections/IConnectionsFetcher";
import IStopsFetcher from "./fetcher/stops/IStopsFetcher";
import IHypermediaTreeFetcher from "./fetcher/tree/IHypermediaTreeFetcher";
declare const TYPES: {
    EventBus: symbol;
    Context: symbol;
    QueryRunner: symbol;
    LocationResolver: symbol;
    HydraTemplateFetcher: symbol;
    HypermediaTreeFetcher: symbol;
    HypermediaTreeProvider: symbol;
    HypermediaTreeFetcherFactory: symbol;
    CatalogFetcher: symbol;
    CatalogProvider: symbol;
    ConnectionsProvider: symbol;
    ConnectionsFetcher: symbol;
    ConnectionsFetcherFactory: symbol;
    StopsProvider: symbol;
    StopsFetcher: symbol;
    StopsFetcherFactory: symbol;
    RoutableTileProvider: symbol;
    RoutableTileFetcher: symbol;
    FootpathsProvider: symbol;
    PublicTransportPlanner: symbol;
    PublicTransportPlannerFactory: symbol;
    ProfileFetcher: symbol;
    ProfileProvider: symbol;
    RoadPlanner: symbol;
    RoadPlannerFactory: symbol;
    PathfinderProvider: symbol;
    ShortestPathAlgorithm: symbol;
    ShortestPathTreeAlgorithm: symbol;
    ReachableStopsFinder: symbol;
    JourneyExtractor: symbol;
    LDFetch: symbol;
    LDLoader: symbol;
};
export default TYPES;
export declare type HypermediaTreeFetcherFactory = (accessUrl: string) => IHypermediaTreeFetcher;
export declare type StopsFetcherFactory = (accessUrl: string) => IStopsFetcher;
export declare type ConnectionsFetcherFactory = (travelMode: TravelMode) => IConnectionsFetcher;
